# Generated by Django 4.2.4 on 2023-08-07 01:33

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import users.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('name', models.CharField(max_length=20, null=True, verbose_name='이름')),
                ('user_id', models.CharField(max_length=20, unique=True, verbose_name='아이디')),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('birthdate', models.DateField(null=True, verbose_name='생일')),
                ('gender', models.CharField(choices=[('male', '남성'), ('female', '여성')], max_length=10, null=True, verbose_name='성별')),
                ('relationship', models.CharField(choices=[('father', '아빠'), ('mother', '엄마'), ('daughter', '딸'), ('son', '아들'), ('grandmother', '할머니'), ('grandfather', '할아버지'), ('grandson', '손자'), ('granddaughter', '손녀')], max_length=20, null=True, verbose_name='소중한 분과의 관계')),
                ('is_taking_meds', models.BooleanField(default=False, verbose_name='복용 중인 약 및 영양제 여부')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', users.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Medication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('medication_name', models.CharField(choices=[('blood_pressure', '혈압약'), ('diabetes', '당뇨약'), ('digestive', '소화제'), ('cholesterol', '고지혈증약'), ('constipation', '변비약'), ('digestive_system', '위장약'), ('antibiotics', '항생제'), ('antihistamines', '항히스타민제'), ('thyroid_disorder', '갑상선질환 치료제'), ('gout_treatment', '통풍 치료제'), ('anti-inflammatory', '소염 진통제'), ('antidepressants', '우울증약'), ('hormone_therapy', '성호르몬제'), ('add', '직접 입력')], max_length=100, unique=True, verbose_name='복용 중인 약')),
            ],
        ),
        migrations.CreateModel(
            name='Nutrition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nutrition_name', models.CharField(choices=[('probiotics', '유산균'), ('omega3', '오메가3'), ('lutein', '루테인'), ('multivitamin', '종합비타민'), ('vitaminC', '비타민C'), ('vitaminD', '비타민D'), ('vitaminA', '비타민A'), ('collagen', '콜라겐'), ('iron', '철분'), ('propolis', '프로폴리스'), ('aronia', '아로니아'), ('folic_acid', '엽산'), ('magnesium', '마그네슘'), ('vitaminE', '비타민E'), ('calcium', '칼슘'), ('add', '직접 입력')], max_length=100, unique=True, verbose_name='복용 중인 영양제')),
            ],
        ),
        migrations.CreateModel(
            name='UserNutrition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nutrition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.nutrition')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='nutritions', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserMedication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('medication', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.medication')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='medications', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
